async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    state = user_state.get(chat_id, "")
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    if state != "DONE":
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start"
        )
        return
    
    await update.message.reply_text("–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é... üì∏")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
        photo = update.message.photo[-1]  # –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        file = await context.bot.get_file(photo.file_id)
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é
        image_data = await file.download_as_bytearray()
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ PIL Image
        image = Image.open(io.BytesIO(image_data))
        logger.info(f"–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {image.size}, —Ä–µ–∂–∏–º: {image.mode}")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if image.mode != 'RGB':
            image = image.convert('RGB')
        
        # –°–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
        original_size = image.size
        image.thumbnail((1024, 1024), Image.Resampling.LANCZOS)
        logger.info(f"–°–∂–∞—Ç–æ —Å {original_size} –¥–æ {image.size}")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
        img_byte_arr = io.BytesIO()
        image.save(img_byte_arr, format='JPEG', quality=85)
        img_byte_arr.seek(0)
        
        image_base64 = base64.b64encode(img_byte_arr.read()).decode('utf-8')
        logger.info("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–æ –≤ base64")
        
        # –ü–æ–ª—É—á–∞–µ–º caption –µ—Å–ª–∏ –µ—Å—Ç—å
        caption = update.message.caption or "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –º–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞"
        logger.info(f"Caption: {caption}")
        
        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        try:
            response = client.chat.completions.create(
                model="gpt-4-vision-preview",
                messages=[
                    {
                        "role": "system",
                        "content": """–¢—ã ‚Äî –∑–∞–±–æ—Ç–ª–∏–≤—ã–π –∏ –æ–ø—ã—Ç–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –¥–æ–º–∞—à–Ω–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö. 
                        
                        –ü—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:
                        - –û–ø–∏—Å—ã–≤–∞–π –ø–∏—Ç–æ–º—Ü–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ –∏ —Å –ª—é–±–æ–≤—å—é
                        - –û–±—Ä–∞—â–∞–π –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ, –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –æ–∫—Ä—É–∂–µ–Ω–∏–µ
                        - –î–∞–≤–∞–π —Å–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É –µ—Å–ª–∏ –≤–∏–¥–∏—à—å —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ
                        - –ò–∑–±–µ–≥–∞–π –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Å–ª–æ–≤: –≤–º–µ—Å—Ç–æ "—Å—Ç–∞—Ä—ã–π" –≥–æ–≤–æ—Ä–∏ "–≤–∑—Ä–æ—Å–ª—ã–π", "–º—É–¥—Ä—ã–π"
                        - –ë—É–¥—å —ç–º–ø–∞—Ç–∏—á–Ω—ã–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–º
                        
                        –û—Ç–≤–µ—á–∞–π –ë–ï–ó Markdown-—Ä–∞–∑–º–µ—Ç–∫–∏ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π **, *, # –∏ —Ç.–¥.)
                        
                        –í–ê–ñ–ù–û: –ï—Å–ª–∏ —Ç—ã –≤–∏–¥–∏—à—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–ø–∏—à–∏ –µ–≥–æ. –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å, —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º —á–µ—Ç–∫–æ."""
                    },
                    {
                        "role": "user", 
                        "content": [
                            {
                                "type": "text",
                                "text": f"{prompt}\n\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∏—Ç–æ–º—Ü–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞:\n{user_data.get(chat_id, {})}"
                            },
                            {
                                "type": "image_url",
                                "image_url": {
                                    "url": f"data:image/jpeg;base64,{image_base64}",
                                    "detail": "high"  # –ò–∑–º–µ–Ω–∏–ª –Ω–∞ high –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
                                }
                            }
                        ]
                    }
                ],
                max_tokens=1000,
                temperature=0.7
            )
            
            ai_response = response.choices[0].message.content
            logger.info("–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Vision API")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ò–ò –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–≤–∏–¥–µ–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            if "–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" in ai_response.lower() and "–Ω–µ" in ai_response.lower() and "–±—ã–ª–æ" in ai_response.lower():
                # –ï—Å–ª–∏ –ò–ò –Ω–µ –≤–∏–¥–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±
                logger.warning("Vision API –Ω–µ –≤–∏–¥–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ URL
                import tempfile
                import requests
                
                with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as tmp_file:
                    image.save(tmp_file.name, 'JPEG', quality=85)
                    
                    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    # –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
                    await update.message.reply_text(
                        "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–æ–∑–Ω–∏–∫–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –∞–Ω–∞–ª–∏–∑–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. "
                        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ —Ç–µ–∫—Å—Ç–æ–º."
                    )
                    return
            
            await update.message.reply_text(ai_response)
            logger.info(f"–ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
            
        except Exception as api_error:
            logger.error(f"–û—à–∏–±–∫–∞ Vision API: {api_error}")
            await update.message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–ø–∏—à–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ —Ç–µ–∫—Å—Ç–æ–º."
            )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {e}")
        await update.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )
